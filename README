sidvis-libsidplayfp
===================

https://github.com/libsidplayfp/libsidplayfp

libsidplayfp is a C64 music player library which integrates
the reSID SID chip emulation into a cycle-based emulator
environment, constantly aiming to improve emulation of the
C64 system and the SID chips.

This fork removes the external filtering and oscillator leakage from the 
SID's output, which allows the SID's DC bias to be cancelled without 
filtering. High-pass filters typically cancel DC bias imperfectly, which
can complicate triggering on an oscilloscope.

Copyright (c) 2000-2001 Simon White
Copyright (c) 2007-2010 Antti Lankila
Copyright (c) 2010-2024 Leandro Nini <drfiemost@users.sourceforge.net>

-----------------------------------------------------------------------------

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

-----------------------------------------------------------------------------

**NOTE**: the git repository contains submodules,
          clone with the --recurse-submodules option

-----------------------------------------------------------------------------

API documentation available online at

https://libsidplayfp.github.io/libsidplayfp/

-----------------------------------------------------------------------------

* Easy Build on Windows with MSYS2 UCRT64 
These instructions should only be used by those who would have no idea what 
to do otherwise and are only using MSYS2 to compile this program. I myself
am very much a novice with these tools; following these instructions would 
probably cause problems for a regular user of a Unix-like system.

In the UCRT64 bash terminal, enter the following commands:
# pacman -S git 
# git clone https://github.com/acrouzet/sidvis-libsidplayfp.git --recurse-submodules 
# cd sidvis-libsidplayfp 
# ./msys2.sh

The sidplayfp player executable should be in:
<msys2 install directory>/ucrt64/bin/sidplayfp.exe

-----------------------------------------------------------------------------

* Build

This package uses autotools so the usual ./configure && make is enough to build
the libraries. If cloning the bare sources the package need to be bootstrapped
in advance with the autoreconf -i command. This step requires the xa cross-assembler
to compile the 6502 code, usually provided by distributions with the xa65 package
or available at http://www.floodgap.com/retrotech/xa/.

In addition to the standard build options the following are available:

--enable-debug[=no/yes/full]
compile with debugging messages
disabled by default

--enable-inline
enable inlinig in reSID engine, increases performances at the expense of bigger code size
enabled by default

--enable-branch-hints
enable branch hints in reSID engine so the compiler can produce more optimized code
enabled by default

--with-simd=<sse4/neon/none>
enable SIMD code in reSIDfp that might increase resampling performance.
Be aware that this is processor specific and the compiler could actually produce
more optimized code with the appropriate flags. Use only if you know what you're doing.
neon is currently unimplemented.
none by default

--enable-testsuite=PATH_TO_TESTSUITE
add support for running VICE testsuite (in prg format). The testsuite is available
in the repository. Intended only for regression tests since it may break normal
code execution. The path to testsuite must include terminal path separator
disabled by default

--enable-tests
enables unit tests. Requires libUnitTest++ installed. Use "make check" to launch the testsuite
disabled by default

--enable-hardsid
enables hardsid support

--with-gcrypt / --without-gcrypt
force/disable libgcrypt support for MD5 computation
default check

--with-exsid
Build with exsid support. Requires either libexsid or one of libfdti1 or libftd2xx


If doxygen is installed and detected by the configure script the documentation
can be built by invoking "make doc".



Known bugs/limitations:
* mus data embedded in psid file is not supported
* hardsid support is untested and possibly broken
